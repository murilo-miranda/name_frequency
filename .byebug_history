exit
json.first[:res][0]
json.first[:res]
json.first
json.first[0]
json.first.size
json.size
json
json.first
json
continue
exit
0
continue
rank_years.first
rank_years.size
rank_years
rows
exit
tables.last
rows = [tables.first.first.rank, tables.first.first.frequency, tables[1].first.frequency]
rows = [tables.first.first.rank, tables.first.first.frequency, tables.[1].first.frequency]
tables.first.first.frequency
tables.first.first
tables.first
tables
continue
tables.last
tables.first
tables
continue
exit
tables
tables.size
exit
tables[0].size
tables[0].first
tables[0]
tables.[0]
rows = []
tables.size
tables.zie
tables
exit
json.last
json.first
json
exit
result.size
result
continue
exit
result.first.next
result.first
result.size
exit
result.size
result.first
result
exit
result.first
result.size
result
exit
result.first
result.fisrt
result.size
result
exit
eixt
json.first
json
JSON
    result = json.first[:res].map do |person|
json
    end
      new(rank: person[:periodo][-5..-2], name: person[:nome], frequency: person[:frequencia])
result = json.first[:res].map do |person|
json
json.first[:res].first[:periodo]
json.first[:res].first
json.first[:res]
json.first[:nome]
json.first
json.first.nome
json.first
json
exit
json.size
json = JSON.parse(response.body, symbolize_names:true)
response.size
continue
faraday_response.class
faraday_response.body.to_a
faraday_response.body.class
faraday_response
exit
continue
p.frequency
p.rank
p.name
p
p = new(rank: person[:periodo][-5..-2], name: person[:nome], frequency: person[:frequencia])
person
exit
json.first[:res].first
json.first[:res]
json.first
json
continue
name
exit
person[:periodo][-5..-2]
person[:periodo]
exit
person[:periodo][-5..-2]
person[:periodo][-4..-2]
person[:periodo][-2..-3]
person[:periodo][-2..-4]
person[:periodo][-2..-5]
person[:periodo][-2][-3]
person[:periodo][-3]
person[:periodo][-2]
person[:periodo][-1]
person[:periodo][-0]
person[:periodo][0-3]
person[:periodo][3]
person[:periodo].class
person[:periodo]
person
periodo
continue
person
continue
json.first[:res]
json[:res]
json
response.body
response
json[:res]
json.first[:res].first[:nome]
json.first[:res].first[:name]
json.first[:res].first
json.first[:res]
json.first[0]
json.first
json
json.first.first
JSON.parse(json.first, symbolize_names:true)
json.first.first
json.first
json = JSON.parse(response.body, symbolize_names:true)
response.body
response
continue
person
exit
person
continue
result[0]
result[1]
result.second
result.first
result.fisrt
result.class
result
continue
json.first
json = JSON.parse(response.body, symbolize_names:true)
JSON.parse(response.body, symbolize_names:true)
response.body
response.methods
response
continue
result.first.id
result.first.name
result.first
result
continue
result.first['name']
result.first[:name]
result.first.name
result.first.methods
result.first.class
result.first
result
exit
result
continue
result
json
